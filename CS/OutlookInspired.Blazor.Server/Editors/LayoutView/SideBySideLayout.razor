@using OutlookInspired.Module.Services.Internal
<style>
  .ellipsis3Lines {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
    max-width: 100%;
    line-height: 1.2em;
    max-height: 4.4em;
  }

  .card {
    flex: 0 0 auto;
    margin-right: 16px;
    max-width: calc(50% - 16px);
  }
  .ellipsis {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    max-width: 100%;
  }
  .col-md-8 p {
    word-wrap: break-word;
    overflow: hidden;
    text-overflow: ellipsis;
    max-width: 100%;
  }
  .card-footer {
    .card-footer {
      padding: 10px 10px 20px 10px;
    }
  }
</style>

<div class="card" @onclick="CardClicked" @ondblclick="CardDoubleClicked" style="@(LayoutView.SelectedCards.Contains(this) ? "background-color: grey;" : "")" >
  <div class="card-header">
    <strong>@(LayoutView.HeaderSelector?.Invoke(CurrentObject)!)</strong>
  </div>
  <div class="card-body">
    <div class="row">
      <div class="col-md-4">
        <img src="@(LayoutView.ImageSelector?.Invoke(CurrentObject).ToBase64Image())" class="img-fluid" alt="Photo">
      </div>
      <div class="col-md-8">
        <div class="col-md-8">
          @foreach (var item in LayoutView.InfoItemsSelector?.Invoke(CurrentObject)??new Dictionary<string, string>()){
            <div class="mb-2">
              <small class="text-muted">@item.Key:</small>
              <p class="ellipsis">@((MarkupString)item.Value)</p>
            </div>
          }
        </div>
      </div>
    </div>
  </div>
  <div class="card-footer ellipsis3Lines">
    @LayoutView.FooterSelector?.Invoke(CurrentObject)
  </div>
</div>

@code {

  
  [Parameter]
  public object CurrentObject { get; set; }
  [CascadingParameter]
  public LayoutView LayoutView { get; set; }
  

  private async Task CardDoubleClicked(MouseEventArgs e){
    await LayoutView.ProcessSelectedObject.InvokeAsync();
  }

  private async Task CardClicked(MouseEventArgs e){
    if (!LayoutView.SelectedCards.Contains(this)){ 
        LayoutView.SelectedCards.Add(this);
    }
    else{
        LayoutView.SelectedCards.Remove(this);
    }
    await LayoutView.SelectionChanged.InvokeAsync(CurrentObject);
  }
}
