@using System.Linq.Expressions
@using OutlookInspired.Module.BusinessObjects
@using OutlookInspired.Module.Services.Internal
@typeparam T
@typeparam TArgument
@typeparam TValue
@typeparam TName

<DxChart Data="@Data" Width="100%" Rotated="true" Height="@Height" CustomizeSeriesPoint="CustomizeSeriesPoint">
    <DxChartCommonSeries T="T" TValue="TValue" TGroup="TName" TArgument="TArgument"
                         ArgumentField="@ArgumentField" ValueField="@ValueField"
                         SeriesType="ChartSeriesType.Bar" SummaryMethod="@(values => values.DynamicSum())" NameField="@NameField" />
    <DxChartLegend Visible="false" />
    <DxChartTooltip Enabled="true" Position="RelativePosition.Outside">
        <div style="background-color: #505050;color: white">
            @context.Point.SeriesName: @($"{(decimal)context.Point.Value:$0,.#K}")
        </div>
    </DxChartTooltip>
</DxChart>
@code {
    [Parameter] public IEnumerable<T> Data { get; set; }
    [Parameter] public Expression<Func<T, TArgument>> ArgumentField { get; set; }
    [Parameter] public Expression<Func<T, TValue>> ValueField { get; set; }
    [Parameter] public Expression<Func<T, TName>> NameField { get; set; }
    [Parameter] public string Height { get; set; } = "70vh";

    private static void CustomizeSeriesPoint(ChartSeriesPointCustomizationSettings obj)
        => obj.PointAppearance.Color = obj.Point.DataItems.Cast<MapItem>().First().Color.ColorFromHex();
}