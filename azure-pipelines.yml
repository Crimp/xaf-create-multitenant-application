variables:
  runSettingsPath: '$(System.DefaultWorkingDirectory)\Tests\Tests.runsettings'
  testsFolderPath: '$(System.DefaultWorkingDirectory)\Tests'
  dxFeedVar: '$(DXFeed)'

trigger:
- main

pool:
  vmImage: 'windows-latest'

jobs:
- job: Test
  timeoutInMinutes: 90  # Set the timeout here
  steps:
  - task: PowerShell@2
    displayName: Build
    continueOnError: false
    inputs:
      targetType: 'inline'
      script: |
        & sqllocaldb start mssqllocaldb
        dotnet nuget add source $(dxFeedVar) --name DX
        cd $env:BUILD_SOURCESDIRECTORY
        dotnet build --configuration TEST
      pwsh: true  
  - task: VSTest@2
    displayName: 'ImportData.Test'
    continueOnError: false
    inputs:
      searchFolder: $(testsFolderPath)
      testSelector: 'testAssemblies'
      testAssemblyVer2: |
        **\*.Tests.dll
        !**\obj\**
      testFiltercriteria: FullyQualifiedName=OutlookInspired.Tests.Import.ImportData.Test
      diagnosticsEnabled: true
      codeCoverageEnabled: true
      runInParallel: false
      runSettingsFile: $(runSettingsPath)
  - task: VSTest@2
    displayName: 'Windows.Test'
    continueOnError: false
    inputs:
      searchFolder: $(testsFolderPath)
      testSelector: 'testAssemblies'
      testAssemblyVer2: |
        **\*.Tests.dll
        !**\obj\**
      testFiltercriteria: FullyQualifiedName=OutlookInspired.Tests.Windows.Test
      diagnosticsEnabled: true
      codeCoverageEnabled: true
      runInParallel: false
      runSettingsFile: $(runSettingsPath)
