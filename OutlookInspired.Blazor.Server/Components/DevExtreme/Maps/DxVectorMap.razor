@inherits MapComponent<DxVectorMapModel,DxVectorMap>
@using OutlookInspired.Blazor.Server.Services
@using System.Text.Json
@using OutlookInspired.Module.Services.Internal

<div @ref=@Element ></div>

@code {
    static DxVectorMap() => ExtractResource<DxVectorMap>();
    private DotNetObjectReference<JsInterop> _itemSelected;
    protected override async Task OnInitializedAsync(){
        await base.OnInitializedAsync();
        _itemSelected = new JsInterop(element =>ComponentModel.SelectMapItem(element)).DotNetReference();
    }
    
    protected override async Task OnAfterRenderClientModuleAsync(){
        if (ComponentModel.Redraw){
            ComponentModel.Redraw = false;
            await ClientObject.DisposeAsync();
            ClientObject = null;
        }
        ClientObject ??= await ClientModule.InvokeAsync<IJSObjectReference>("InitVectorMap", Element, ComponentModel,_itemSelected);
        var layer = ComponentModel.LayerDatasource;
        if (layer!=null){
            ComponentModel.LayerDatasource = null;
            await ClientModule.InvokeVoidAsync("SetLayerDatasource", ClientObject, layer);
        }
        
    }

}
